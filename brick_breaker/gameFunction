import org.w3c.dom.css.Rect;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Timer.*;
public class brick_gamePlay extends JPanel implements KeyListener,ActionListener
{
 public boolean play = false;
 public int score =0;
 public int totalBricks = 21;
 public Timer timer;
 static final int delay = 2;
 public int playerX = 310;
 public int BallPosX = 140;
 public int BallPosY = 250;
 public int ballXDir = -1;
 public int ballYDir = -2;
 public mapG m;

 public brick_gamePlay()
 {
     m = new mapG(3,7);
     addKeyListener(this);
     setFocusable(true);
     setFocusTraversalKeysEnabled(false);
     timer = new Timer(delay,this);
     timer.start();
 }

 public void paint(Graphics g)
 {
     // background
     g.setColor(Color.black);
     g.fillRect(1,1,692,592);

     //drawing map
     m.draw((Graphics2D)g);

     // borders
     g.setColor(Color.yellow);
     g.fillRect(0,0,3,400);
     g.fillRect(0,0,683,3);
     g.fillRect(683,0,3,400);

     // the peddle
     g.setColor(Color.green);
     g.fillRect(playerX,350,100,8);

     // the ball
     g.setColor(Color.yellow);
     g.fillOval(BallPosX,BallPosY,20,20);

     // scores
     g.setColor(Color.white);
     g.setFont(new Font("serif", Font.BOLD ,25));
     g.drawString(" "+score,620,30);

     if(totalBricks<=0){
         play = false;
         ballYDir =  0;
         ballXDir = 0;
         g.setColor(Color.red);
         g.setFont(new Font("serif", Font.BOLD ,30));
         g.drawString(" You won ",230,230);

         g.setFont(new Font("serif", Font.BOLD ,20));
         g.drawString(" PRESS ENTER TO RESTART ",190,270);
     }

     if(BallPosY > 450){
         play = false;
         ballYDir =  0;
         ballXDir = 0;
         g.setColor(Color.red);
         g.setFont(new Font("serif", Font.BOLD ,30));
         g.drawString(" Game Over  , Scores  "+score,190,230);

         g.setFont(new Font("serif", Font.BOLD ,20));
         g.drawString(" PRESS ENTER TO RESTART ",190,270);
     }


     g.dispose();
 }
    @Override
    public void actionPerformed(ActionEvent e) {
        timer.start();
        if(play){
        if(new Rectangle(BallPosX,BallPosY,20,20).intersects(new Rectangle(playerX,350,100,8)))
        {
            ballYDir=-ballYDir;
            }
      A:  for(int i=0;i<m.map.length;i++){
            for(int j=0;j<m.map[0].length;j++){
                if(m.map[i][j]>0){
                    int brickX = j*m.brickWidth +80;
                    int brickY = i*m.brickHeight +50;
                    int brickWidth = m.brickWidth;
                    int brickHeight = m.brickHeight;

                    Rectangle rect = new Rectangle(brickX,brickY,brickWidth,brickHeight);
                    Rectangle ballRect = new Rectangle(BallPosX,BallPosY,20,20);
                    Rectangle brickRect = rect;

                    if(ballRect.intersects(brickRect)){
                        m.setBrickvalue(0,i,j);
                        totalBricks--;
                        score+=5;

                        if(BallPosX + 19 <=brickRect.x || BallPosX + 1>= brickRect.x + brickRect.width){
                            ballXDir = -ballXDir;
                        }else{
                            ballYDir = -ballYDir;
                        }
                        break  A;
                    }
                }
            }
        }
            BallPosX +=ballXDir;
            BallPosY += ballYDir;
            if(BallPosX < 0){
                ballXDir =- ballXDir;
            }
            if(BallPosY < 0){
                ballYDir =- ballYDir;
            }
            if(BallPosX > 680 ){
                ballXDir =- ballXDir;
            }
        }
        repaint(); // recall the paint method and create everything again
    }

    @Override
    public void keyTyped(KeyEvent e) {}
    @Override
    public void keyReleased(KeyEvent e) {}

    @Override
    public void keyPressed(KeyEvent e)
    {
        if(e.getKeyCode() == KeyEvent.VK_RIGHT){
            if(playerX>=600){
                playerX=600;
            }
            else{
                moveRight();
            }
        }
        if(e.getKeyCode() == KeyEvent.VK_LEFT){
            if(playerX<10){
                playerX=10;
            }
            else{
                moveLeft();
            }
        }
        if(e.getKeyCode() == KeyEvent.VK_ENTER){
            if(!play){
                play=true;
                BallPosX = 120;
                BallPosY = 350;
                ballXDir = -1;
                ballYDir = -2;
                playerX = 310;
                score = 0;
                totalBricks = 21;
                m = new mapG(3,7);

                repaint();
            }
        }
    }
    public void moveRight(){
     play=true;
     playerX+=20;
    }
    public void moveLeft(){
     play=true;
     playerX-=20;
    }
}
